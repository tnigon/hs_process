{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Tutorial\n",
    "### Follow along\n",
    "\n",
    "Code for all the examples is located in your `PYTHONPATH/Lib/site-packages/eonr/examples` folder. With that said, you should be able to make use of `EONR` by following and executing the commands in this tutorial using either the sample data provided or substituting in your own data.\n",
    "\n",
    "*You will find the following code included in the* `tutorial.py` *or* `tutorial.ipynb` *(for* [Jupyter notebooks](https://jupyter.org/)*) files in your* `PYTHONPATH/Lib/site-packages/eonr/examples` *folder - feel free to load that into your Python IDE to follow along.*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- - -\n",
    "### Load modules\n",
    "After [installation](installation.md), load `Pandas` and the `EONR` module in a Python interpreter:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "EONR version: 0.2.0\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import pandas as pd\n",
    "import eonr\n",
    "print('EONR version: {0}'.format(eonr.__version__))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- - -\n",
    "### Load the data\n",
    "`EONR` uses Pandas dataframes to access and manipulate the experimental data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>location</th>\n",
       "      <th>plot</th>\n",
       "      <th>trt</th>\n",
       "      <th>rep</th>\n",
       "      <th>time_n</th>\n",
       "      <th>rate_n_applied_kgha</th>\n",
       "      <th>yld_grain_dry_kgha</th>\n",
       "      <th>nup_total_kgha</th>\n",
       "      <th>soil_plus_fert_n_kgha</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>101</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>Pre</td>\n",
       "      <td>235.3785</td>\n",
       "      <td>12410.916200</td>\n",
       "      <td>198.759898</td>\n",
       "      <td>284.69590</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>102</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Pre</td>\n",
       "      <td>67.2510</td>\n",
       "      <td>10627.946000</td>\n",
       "      <td>147.971755</td>\n",
       "      <td>116.56840</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>103</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>7428.081218</td>\n",
       "      <td>98.769392</td>\n",
       "      <td>38.10890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>104</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>Pre</td>\n",
       "      <td>33.6255</td>\n",
       "      <td>9202.953180</td>\n",
       "      <td>111.440210</td>\n",
       "      <td>71.73440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>105</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>Pre</td>\n",
       "      <td>100.8765</td>\n",
       "      <td>10841.127180</td>\n",
       "      <td>142.663887</td>\n",
       "      <td>154.67730</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>106</td>\n",
       "      <td>7</td>\n",
       "      <td>2</td>\n",
       "      <td>Pre</td>\n",
       "      <td>201.7530</td>\n",
       "      <td>10646.649330</td>\n",
       "      <td>178.802092</td>\n",
       "      <td>255.55380</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>107</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>Pre</td>\n",
       "      <td>168.1275</td>\n",
       "      <td>12367.436000</td>\n",
       "      <td>186.053531</td>\n",
       "      <td>201.75300</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>108</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>Pre</td>\n",
       "      <td>134.5020</td>\n",
       "      <td>13366.361700</td>\n",
       "      <td>196.737290</td>\n",
       "      <td>168.12750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>201</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>Pre</td>\n",
       "      <td>201.7530</td>\n",
       "      <td>14232.053480</td>\n",
       "      <td>228.775204</td>\n",
       "      <td>251.07040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>202</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>Pre</td>\n",
       "      <td>134.5020</td>\n",
       "      <td>14384.824980</td>\n",
       "      <td>226.006218</td>\n",
       "      <td>183.81940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>203</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>Pre</td>\n",
       "      <td>168.1275</td>\n",
       "      <td>13592.219290</td>\n",
       "      <td>182.423028</td>\n",
       "      <td>206.23640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>204</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>Pre</td>\n",
       "      <td>100.8765</td>\n",
       "      <td>14091.078390</td>\n",
       "      <td>187.745096</td>\n",
       "      <td>138.98540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>205</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>Pre</td>\n",
       "      <td>67.2510</td>\n",
       "      <td>10739.981390</td>\n",
       "      <td>133.470950</td>\n",
       "      <td>121.05180</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>206</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>8375.090921</td>\n",
       "      <td>109.460245</td>\n",
       "      <td>53.80080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>207</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>Pre</td>\n",
       "      <td>235.3785</td>\n",
       "      <td>13797.485850</td>\n",
       "      <td>195.932161</td>\n",
       "      <td>269.00400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>208</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>Pre</td>\n",
       "      <td>33.6255</td>\n",
       "      <td>9713.487469</td>\n",
       "      <td>113.903035</td>\n",
       "      <td>67.25100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>301</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>Pre</td>\n",
       "      <td>67.2510</td>\n",
       "      <td>12579.012170</td>\n",
       "      <td>180.812783</td>\n",
       "      <td>106.48075</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>302</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>Pre</td>\n",
       "      <td>201.7530</td>\n",
       "      <td>13604.571780</td>\n",
       "      <td>208.724988</td>\n",
       "      <td>240.98275</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>303</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Pre</td>\n",
       "      <td>33.6255</td>\n",
       "      <td>10185.959390</td>\n",
       "      <td>121.505528</td>\n",
       "      <td>68.37185</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>304</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>Pre</td>\n",
       "      <td>168.1275</td>\n",
       "      <td>14305.321460</td>\n",
       "      <td>204.391319</td>\n",
       "      <td>202.87385</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>305</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>Pre</td>\n",
       "      <td>235.3785</td>\n",
       "      <td>13929.592020</td>\n",
       "      <td>186.775288</td>\n",
       "      <td>267.88315</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>306</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>Pre</td>\n",
       "      <td>100.8765</td>\n",
       "      <td>10975.799250</td>\n",
       "      <td>147.057081</td>\n",
       "      <td>133.38115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>307</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>Pre</td>\n",
       "      <td>134.5020</td>\n",
       "      <td>11338.070290</td>\n",
       "      <td>148.348790</td>\n",
       "      <td>162.52325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>308</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>5821.373521</td>\n",
       "      <td>68.791363</td>\n",
       "      <td>28.02125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>401</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>Pre</td>\n",
       "      <td>134.5020</td>\n",
       "      <td>13755.002370</td>\n",
       "      <td>198.844611</td>\n",
       "      <td>173.73175</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>402</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.0000</td>\n",
       "      <td>9077.628329</td>\n",
       "      <td>122.207140</td>\n",
       "      <td>39.22975</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>403</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>Pre</td>\n",
       "      <td>100.8765</td>\n",
       "      <td>13760.323240</td>\n",
       "      <td>181.734857</td>\n",
       "      <td>135.62285</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>404</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>Pre</td>\n",
       "      <td>235.3785</td>\n",
       "      <td>14896.886860</td>\n",
       "      <td>227.454749</td>\n",
       "      <td>270.12485</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>405</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>Pre</td>\n",
       "      <td>33.6255</td>\n",
       "      <td>10551.466010</td>\n",
       "      <td>144.282839</td>\n",
       "      <td>66.13015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>406</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>Pre</td>\n",
       "      <td>168.1275</td>\n",
       "      <td>15621.406530</td>\n",
       "      <td>227.056199</td>\n",
       "      <td>200.63215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>407</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>Pre</td>\n",
       "      <td>67.2510</td>\n",
       "      <td>10950.450720</td>\n",
       "      <td>146.628851</td>\n",
       "      <td>95.27225</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>2012</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>408</td>\n",
       "      <td>7</td>\n",
       "      <td>4</td>\n",
       "      <td>Pre</td>\n",
       "      <td>201.7530</td>\n",
       "      <td>13838.222530</td>\n",
       "      <td>210.340625</td>\n",
       "      <td>229.77425</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    year   location  plot  trt  rep time_n  rate_n_applied_kgha  \\\n",
       "0   2012  Minnesota   101    8    1    Pre             235.3785   \n",
       "1   2012  Minnesota   102    3    1    Pre              67.2510   \n",
       "2   2012  Minnesota   103    1    1    Pre               0.0000   \n",
       "3   2012  Minnesota   104    2    1    Pre              33.6255   \n",
       "4   2012  Minnesota   105    4    2    Pre             100.8765   \n",
       "5   2012  Minnesota   106    7    2    Pre             201.7530   \n",
       "6   2012  Minnesota   107    6    2    Pre             168.1275   \n",
       "7   2012  Minnesota   108    5    2    Pre             134.5020   \n",
       "8   2012  Minnesota   201    7    1    Pre             201.7530   \n",
       "9   2012  Minnesota   202    5    1    Pre             134.5020   \n",
       "10  2012  Minnesota   203    6    1    Pre             168.1275   \n",
       "11  2012  Minnesota   204    4    1    Pre             100.8765   \n",
       "12  2012  Minnesota   205    3    2    Pre              67.2510   \n",
       "13  2012  Minnesota   206    1    2    Pre               0.0000   \n",
       "14  2012  Minnesota   207    8    2    Pre             235.3785   \n",
       "15  2012  Minnesota   208    2    2    Pre              33.6255   \n",
       "16  2012  Minnesota   301    3    3    Pre              67.2510   \n",
       "17  2012  Minnesota   302    7    3    Pre             201.7530   \n",
       "18  2012  Minnesota   303    2    3    Pre              33.6255   \n",
       "19  2012  Minnesota   304    6    3    Pre             168.1275   \n",
       "20  2012  Minnesota   305    8    4    Pre             235.3785   \n",
       "21  2012  Minnesota   306    4    4    Pre             100.8765   \n",
       "22  2012  Minnesota   307    5    4    Pre             134.5020   \n",
       "23  2012  Minnesota   308    1    4    Pre               0.0000   \n",
       "24  2012  Minnesota   401    5    3    Pre             134.5020   \n",
       "25  2012  Minnesota   402    1    3    Pre               0.0000   \n",
       "26  2012  Minnesota   403    4    3    Pre             100.8765   \n",
       "27  2012  Minnesota   404    8    3    Pre             235.3785   \n",
       "28  2012  Minnesota   405    2    4    Pre              33.6255   \n",
       "29  2012  Minnesota   406    6    4    Pre             168.1275   \n",
       "30  2012  Minnesota   407    3    4    Pre              67.2510   \n",
       "31  2012  Minnesota   408    7    4    Pre             201.7530   \n",
       "\n",
       "    yld_grain_dry_kgha  nup_total_kgha  soil_plus_fert_n_kgha  \n",
       "0         12410.916200      198.759898              284.69590  \n",
       "1         10627.946000      147.971755              116.56840  \n",
       "2          7428.081218       98.769392               38.10890  \n",
       "3          9202.953180      111.440210               71.73440  \n",
       "4         10841.127180      142.663887              154.67730  \n",
       "5         10646.649330      178.802092              255.55380  \n",
       "6         12367.436000      186.053531              201.75300  \n",
       "7         13366.361700      196.737290              168.12750  \n",
       "8         14232.053480      228.775204              251.07040  \n",
       "9         14384.824980      226.006218              183.81940  \n",
       "10        13592.219290      182.423028              206.23640  \n",
       "11        14091.078390      187.745096              138.98540  \n",
       "12        10739.981390      133.470950              121.05180  \n",
       "13         8375.090921      109.460245               53.80080  \n",
       "14        13797.485850      195.932161              269.00400  \n",
       "15         9713.487469      113.903035               67.25100  \n",
       "16        12579.012170      180.812783              106.48075  \n",
       "17        13604.571780      208.724988              240.98275  \n",
       "18        10185.959390      121.505528               68.37185  \n",
       "19        14305.321460      204.391319              202.87385  \n",
       "20        13929.592020      186.775288              267.88315  \n",
       "21        10975.799250      147.057081              133.38115  \n",
       "22        11338.070290      148.348790              162.52325  \n",
       "23         5821.373521       68.791363               28.02125  \n",
       "24        13755.002370      198.844611              173.73175  \n",
       "25         9077.628329      122.207140               39.22975  \n",
       "26        13760.323240      181.734857              135.62285  \n",
       "27        14896.886860      227.454749              270.12485  \n",
       "28        10551.466010      144.282839               66.13015  \n",
       "29        15621.406530      227.056199              200.63215  \n",
       "30        10950.450720      146.628851               95.27225  \n",
       "31        13838.222530      210.340625              229.77425  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_data = pd.read_csv(os.path.join('data', 'minnesota_2012.csv'))\n",
    "df_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- - -\n",
    "### Set column names *(pre-init)*\n",
    "*The table containing the experimental data* **must** *have a minimum of two columns:*\n",
    "\n",
    "* *Nitrogen fertilizer rate*\n",
    "* *Grain yield*\n",
    "\n",
    "`EONR` accepts custom column names. Just be sure to set them by either using `EONR.set_column_names()` or by passing them to `EONR.calculate_eonr()`. We will declare the names of the these two columns as they exist in the `Pandas` dataframe so they can be passed to `EONR` later:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "col_n_app = 'rate_n_applied_kgha'\n",
    "col_yld = 'yld_grain_dry_kgha'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Each row of data in our dataframe should correspond to a nitrogen rate treatment plot. It is common to have several other columns describing each treatment plot (e.g., year, location, replication, nitrogen timing, etc.). These aren't necessary, but `EONR` will try pull information from \"year\", \"location\", and \"nitrogen timing\" for labeling the plots that are generated (as you'll see towards the end of this tutorial).\n",
    "\n",
    "- - -\n",
    "### Set units\n",
    "Although optional, it is good practice to declare units so we don't get confused:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "unit_currency = '$'\n",
    "unit_fert = 'kg'\n",
    "unit_grain = 'kg'\n",
    "unit_area = 'ha'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "These unit variables are only used for plotting (titles and axes labels), and they are not actually used for any computations. Because the initial parameter guess is critically important for fitting the model(s), there is logic built in that adjusts this intitial guess based on the units provided here.\n",
    "\n",
    "- - -\n",
    "### Set economic conditions\n",
    "`EONR` computes the _Economic_ Optimum Nitrogen Rate for any economic scenario that we define. All that is required is to declare the cost of the nitrogen fertilizer (per unit, as defined above) and the price of grain (also per unit). Note that the cost of nitrogen fertilizer can be set to zero, and the _Agronomic_ Optimum Nitrogen Rate will be computed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "cost_n_fert = 0.88  # in USD per kg nitrogen\n",
    "price_grain = 0.157  # in USD per kg grain"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- - -\n",
    "### Initialize `EONR`\n",
    "At this point, we can initialize an instance of `EONR`.\n",
    "\n",
    "*Before doing so, we may want to set the base directory.* `EONR.base_dir` *is the default location for saving plots and data processed by* `EONR`*. If* `EONR.base_dir` *is not set, it will be set to be a folder named \"eonr_tutorial\" in the current working directory during the intitialization (to see your current working directory, type* `os.getcwd()`*). If you do not wish to use this as your current working directory, it can be passed to the* `EONR` *instance using the* `base_dir` *keyword.*\n",
    "\n",
    "For demonstration purposes, we will set `EONR.base_dir` to what would be the default folder if nothing were passed to the `base_dir` keyword --> that is, we will choose a folder named \"eonr_advanced_tutorial\" in the current working directory (`EONR` will create the directory if it does not exist).\n",
    "\n",
    "And finally, to create an instance of `EONR`, pass the appropriate variables to `EONR()`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "base_dir = os.path.join(os.getcwd(), 'eonr_tutorial')\n",
    "\n",
    "my_eonr = eonr.EONR(cost_n_fert=cost_n_fert,\n",
    "                    price_grain=price_grain,\n",
    "                    col_n_app=col_n_app,\n",
    "                    col_yld=col_yld,\n",
    "                    unit_currency=unit_currency,\n",
    "                    unit_grain=unit_grain,\n",
    "                    unit_fert=unit_fert,\n",
    "                    unit_area=unit_area,\n",
    "                    model=None,\n",
    "                    base_dir=base_dir)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Notice the `model` keywork argument was set to `None` (default='quad_plateau'). This keyword is used to define which model to use to fit the experimental data. If `None`, `EONR` will try all supported models (i.e., as of v. 0.2.0, both 'quad_plateau' and 'quadratic' models are supported), and use the model that fits the data best as determined by the highest $\\text{r}^2$."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- - -\n",
    "### Calculate the EONR\n",
    "With `my_eonr` initialized as an instance of `EONR`, we can now calculate the economic optimum nitrogen rate by calling the `calculate_eonr()` method and passing the dataframe with the loaded data:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Computing EONR for Minnesota 2012 Pre\n",
      "Cost of N fertilizer: $0.88 per kg\n",
      "Price grain: $0.16 per kg\n",
      "Fixed costs: $0.00 per ha\n",
      "Checking quadratic and quadric-plateau models for best fit..\n",
      "Quadratic model r^2: 0.72\n",
      "Quadratic-plateau model r^2: 0.73\n",
      "Using the quadratic-plateau model..\n",
      "Economic optimum N rate (EONR): 162.3 kg per ha [130.5, 207.8] (90.0% confidence)\n",
      "Maximum return to N (MRTN): $767.93 per ha\n"
     ]
    }
   ],
   "source": [
    "my_eonr.calculate_eonr(df_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It may take a few seconds to run, but it will take much longer if you choose to compute the bootstrap confidence intervals in addition to the profile-likelihood confidence intervals. Please see the [Advanced tutorial](advanced_tutorial.html#Bootstrap-confidence-intervals) describing how to compute the bootstrap CIs (`EONR` does not run the bootstrap CIs by default)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And that's it! The economic optimum for this dataset and economic scenario was **162 kg nitrogen per ha** (with 90% confidence bounds at **131** and **208 kg per ha**) and resulted in a maximum net return of nearly **$770 per ha**.\n",
    "\n",
    "Notice the $\\text{r}^2$ for the quadratic-plateau model was greater than that of the quadratic model, so the quadratic-plateau model was used (the model used is recorded in `EONR.df_results` and will be displayed in the plot legend - see below).\n",
    "\n",
    "- - - \n",
    "### Plotting the EONR\n",
    "This is great, but of course it'd be useful to see our data and results plotted. Do this by calling the ```plot_eonr()``` module and *(optionally)* passing the minimum/maximum values for each axis:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x288 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "my_eonr.plot_eonr(x_min=-5, x_max=300, y_min=-100, y_max=1400)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* The blue points are **experimental data** (yield value in \\\\$ per ha as a function of nitrogen rate)\n",
    "* The blue line is the best-fit quadratic-plateau model representing **gross return to nitrogen**\n",
    "* The red line is the **cost of nitrogen fertilizer**\n",
    "* The green line is the difference between the two and represents the **net return to nitrogen**\n",
    "* The green point is the **Economic Optimum Nitrogen Rate (EONR)**\n",
    "* The transparent grey box surrounding the EONR/MRTN (green point) illustrates the **90\\% confidence intervals**\n",
    "\n",
    "The EONR is the point on the x-axis where the net return curve (green) reaches the maximum return. The return to nitrogen at the EONR is the **Maximum Return to Nitrogen (MRTN)**, indicating the profit that is earned at the economic optimum nitrogen rate.\n",
    "\n",
    "Notice the economic scenario (i.e., grain price, nitrogen fertilizer cost, etc.) and the \"Base zero\" values in the upper right corner describing the assumptions of EONR calculatioon. *Base zero* refers to the initial y-intercept of the gross return model (this setting can be turned on/off by setting `EONR.base_zero` to `True` or `False`. See the [Advanced tutorial](advanced_tutorial.html#Turn-base_zero-off) and the [API](my_eonr.html#module-eonr.eonr) for more information.\n",
    "\n",
    "- - -\n",
    "### Accesing complete results\n",
    "All results (e.g., EONR, MRTN, $\\text{r}^2$ and root mean squared errors from best-fit models, confidence intervals, etc.) are stored in the `EONR.df_results` dataframe:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price_grain</th>\n",
       "      <th>cost_n_fert</th>\n",
       "      <th>cost_n_social</th>\n",
       "      <th>costs_fixed</th>\n",
       "      <th>price_ratio</th>\n",
       "      <th>unit_price_grain</th>\n",
       "      <th>unit_cost_n</th>\n",
       "      <th>location</th>\n",
       "      <th>year</th>\n",
       "      <th>time_n</th>\n",
       "      <th>...</th>\n",
       "      <th>mrtn</th>\n",
       "      <th>grtn_r2_adj</th>\n",
       "      <th>grtn_rmse</th>\n",
       "      <th>grtn_max_y</th>\n",
       "      <th>grtn_crit_x</th>\n",
       "      <th>grtn_y_int</th>\n",
       "      <th>scn_lin_r2</th>\n",
       "      <th>scn_lin_rmse</th>\n",
       "      <th>scn_exp_r2</th>\n",
       "      <th>scn_exp_rmse</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.157</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.605096</td>\n",
       "      <td>$ per ha</td>\n",
       "      <td>$ per kg</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>...</td>\n",
       "      <td>767.930477</td>\n",
       "      <td>0.728926</td>\n",
       "      <td>181.225993</td>\n",
       "      <td>917.43358</td>\n",
       "      <td>177.439985</td>\n",
       "      <td>0.002964</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1 rows × 33 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   price_grain  cost_n_fert  cost_n_social  costs_fixed  price_ratio  \\\n",
       "0        0.157         0.88            0.0          0.0     5.605096   \n",
       "\n",
       "  unit_price_grain unit_cost_n   location  year time_n  ...        mrtn  \\\n",
       "0         $ per ha    $ per kg  Minnesota  2012    Pre  ...  767.930477   \n",
       "\n",
       "   grtn_r2_adj   grtn_rmse  grtn_max_y  grtn_crit_x  grtn_y_int  scn_lin_r2  \\\n",
       "0     0.728926  181.225993   917.43358   177.439985    0.002964        None   \n",
       "\n",
       "   scn_lin_rmse  scn_exp_r2  scn_exp_rmse  \n",
       "0          None        None          None  \n",
       "\n",
       "[1 rows x 33 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_eonr.df_results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "See the [Advanced tutorial](advanced_tutorial.html#View-results) for a description of every column."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- - -\n",
    "### Visualizing all confidence intervals\n",
    "By default, the confidence intervals (CIs) are calculated at many alpha levels. Noting that $\\text{CI} = 1-\\alpha$, let's plot the **Wald** CIs and **profile-likelihood** CIs for a range of $\\alpha$ values.\n",
    "\n",
    "`EONR.plot_modify_size()` can be called to make basic adjustments to the figure size. Because ``EONR.fig_tau.fig`` is a Matplotlib figure object, you'll be able to make any customizations within the Matplotlib API as well. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x288 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "my_eonr.plot_tau()\n",
    "my_eonr.fig_tau = my_eonr.plot_modify_size(fig=my_eonr.fig_tau.fig, plotsize_x=5, plotsize_y=4.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This plot shows the lower and upper confidence intervals of the *True EONR* (*True EONR* refers to the actual EONR value, which is not actually known due to uncertainty in the dataset). At 0\\% confidence, the *True EONR* is the *maximum likelihood* value, but as we increase the confidence level from 67\\%, 80\\%, 90\\%, 95\\%, and 99\\%, the statistical range of the *True EONR* widens.\n",
    "\n",
    "In general, the profile-likelihood CIs are considered the most accurate of the three methods because they reflect the actual, often asymmetric, uncertainty in a parameter estimate [Cook & Weisberg, 1990](https://www.tandfonline.com/doi/abs/10.1080/01621459.1990.10476233).\n",
    "\n",
    "- - -\n",
    "### Accessing complete CI results\n",
    "All data relating to the calculation of the CIs are saved in the `EONR.df_ci` dataframe:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>run_n</th>\n",
       "      <th>location</th>\n",
       "      <th>year</th>\n",
       "      <th>time_n</th>\n",
       "      <th>price_grain</th>\n",
       "      <th>cost_n_fert</th>\n",
       "      <th>cost_n_social</th>\n",
       "      <th>price_ratio</th>\n",
       "      <th>f_stat</th>\n",
       "      <th>t_stat</th>\n",
       "      <th>level</th>\n",
       "      <th>wald_l</th>\n",
       "      <th>wald_u</th>\n",
       "      <th>pl_l</th>\n",
       "      <th>pl_u</th>\n",
       "      <th>boot_l</th>\n",
       "      <th>boot_u</th>\n",
       "      <th>opt_method_l</th>\n",
       "      <th>opt_method_u</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.157</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.605096</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>N/A</td>\n",
       "      <td>N/A</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.157</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.605096</td>\n",
       "      <td>0.016070</td>\n",
       "      <td>0.126767</td>\n",
       "      <td>0.100</td>\n",
       "      <td>158.247550</td>\n",
       "      <td>166.432039</td>\n",
       "      <td>159.432270</td>\n",
       "      <td>165.322890</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.157</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.605096</td>\n",
       "      <td>0.065374</td>\n",
       "      <td>0.255684</td>\n",
       "      <td>0.200</td>\n",
       "      <td>154.085886</td>\n",
       "      <td>170.593703</td>\n",
       "      <td>156.557488</td>\n",
       "      <td>168.432973</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.157</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.605096</td>\n",
       "      <td>0.151446</td>\n",
       "      <td>0.389161</td>\n",
       "      <td>0.300</td>\n",
       "      <td>149.777004</td>\n",
       "      <td>174.902584</td>\n",
       "      <td>153.670496</td>\n",
       "      <td>171.730580</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.157</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.605096</td>\n",
       "      <td>0.281127</td>\n",
       "      <td>0.530214</td>\n",
       "      <td>0.400</td>\n",
       "      <td>145.223559</td>\n",
       "      <td>179.456029</td>\n",
       "      <td>150.721517</td>\n",
       "      <td>175.297880</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.157</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.605096</td>\n",
       "      <td>0.466549</td>\n",
       "      <td>0.683044</td>\n",
       "      <td>0.500</td>\n",
       "      <td>140.289960</td>\n",
       "      <td>184.389628</td>\n",
       "      <td>147.647498</td>\n",
       "      <td>179.255088</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.157</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.605096</td>\n",
       "      <td>0.729644</td>\n",
       "      <td>0.854192</td>\n",
       "      <td>0.600</td>\n",
       "      <td>134.765004</td>\n",
       "      <td>189.914585</td>\n",
       "      <td>144.357366</td>\n",
       "      <td>183.796319</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.157</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.605096</td>\n",
       "      <td>0.969292</td>\n",
       "      <td>0.984526</td>\n",
       "      <td>0.667</td>\n",
       "      <td>130.557584</td>\n",
       "      <td>194.122004</td>\n",
       "      <td>141.960754</td>\n",
       "      <td>187.330059</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.157</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.605096</td>\n",
       "      <td>1.113663</td>\n",
       "      <td>1.055302</td>\n",
       "      <td>0.700</td>\n",
       "      <td>128.272818</td>\n",
       "      <td>196.406771</td>\n",
       "      <td>140.698855</td>\n",
       "      <td>189.275802</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.157</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.605096</td>\n",
       "      <td>1.719858</td>\n",
       "      <td>1.311434</td>\n",
       "      <td>0.800</td>\n",
       "      <td>120.004454</td>\n",
       "      <td>204.675134</td>\n",
       "      <td>136.361782</td>\n",
       "      <td>196.472716</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.157</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.605096</td>\n",
       "      <td>2.887033</td>\n",
       "      <td>1.699127</td>\n",
       "      <td>0.900</td>\n",
       "      <td>107.489043</td>\n",
       "      <td>217.190545</td>\n",
       "      <td>130.457577</td>\n",
       "      <td>207.827070</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.157</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.605096</td>\n",
       "      <td>4.182964</td>\n",
       "      <td>2.045230</td>\n",
       "      <td>0.950</td>\n",
       "      <td>96.316254</td>\n",
       "      <td>228.363335</td>\n",
       "      <td>125.804436</td>\n",
       "      <td>218.441868</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>0.157</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.605096</td>\n",
       "      <td>7.597663</td>\n",
       "      <td>2.756386</td>\n",
       "      <td>0.990</td>\n",
       "      <td>73.358903</td>\n",
       "      <td>251.320685</td>\n",
       "      <td>117.769597</td>\n",
       "      <td>241.793290</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "      <td>Nelder-Mead</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    run_n   location  year time_n  price_grain  cost_n_fert  cost_n_social  \\\n",
       "0       1  Minnesota  2012    Pre        0.157         0.88            0.0   \n",
       "1       1  Minnesota  2012    Pre        0.157         0.88            0.0   \n",
       "2       1  Minnesota  2012    Pre        0.157         0.88            0.0   \n",
       "3       1  Minnesota  2012    Pre        0.157         0.88            0.0   \n",
       "4       1  Minnesota  2012    Pre        0.157         0.88            0.0   \n",
       "5       1  Minnesota  2012    Pre        0.157         0.88            0.0   \n",
       "6       1  Minnesota  2012    Pre        0.157         0.88            0.0   \n",
       "7       1  Minnesota  2012    Pre        0.157         0.88            0.0   \n",
       "8       1  Minnesota  2012    Pre        0.157         0.88            0.0   \n",
       "9       1  Minnesota  2012    Pre        0.157         0.88            0.0   \n",
       "10      1  Minnesota  2012    Pre        0.157         0.88            0.0   \n",
       "11      1  Minnesota  2012    Pre        0.157         0.88            0.0   \n",
       "12      1  Minnesota  2012    Pre        0.157         0.88            0.0   \n",
       "\n",
       "    price_ratio    f_stat    t_stat  level      wald_l      wald_u  \\\n",
       "0      5.605096  0.000000  0.000000  0.000         NaN         NaN   \n",
       "1      5.605096  0.016070  0.126767  0.100  158.247550  166.432039   \n",
       "2      5.605096  0.065374  0.255684  0.200  154.085886  170.593703   \n",
       "3      5.605096  0.151446  0.389161  0.300  149.777004  174.902584   \n",
       "4      5.605096  0.281127  0.530214  0.400  145.223559  179.456029   \n",
       "5      5.605096  0.466549  0.683044  0.500  140.289960  184.389628   \n",
       "6      5.605096  0.729644  0.854192  0.600  134.765004  189.914585   \n",
       "7      5.605096  0.969292  0.984526  0.667  130.557584  194.122004   \n",
       "8      5.605096  1.113663  1.055302  0.700  128.272818  196.406771   \n",
       "9      5.605096  1.719858  1.311434  0.800  120.004454  204.675134   \n",
       "10     5.605096  2.887033  1.699127  0.900  107.489043  217.190545   \n",
       "11     5.605096  4.182964  2.045230  0.950   96.316254  228.363335   \n",
       "12     5.605096  7.597663  2.756386  0.990   73.358903  251.320685   \n",
       "\n",
       "          pl_l        pl_u  boot_l  boot_u opt_method_l opt_method_u  \n",
       "0          NaN         NaN     NaN     NaN          N/A          N/A  \n",
       "1   159.432270  165.322890     NaN     NaN  Nelder-Mead  Nelder-Mead  \n",
       "2   156.557488  168.432973     NaN     NaN  Nelder-Mead  Nelder-Mead  \n",
       "3   153.670496  171.730580     NaN     NaN  Nelder-Mead  Nelder-Mead  \n",
       "4   150.721517  175.297880     NaN     NaN  Nelder-Mead  Nelder-Mead  \n",
       "5   147.647498  179.255088     NaN     NaN  Nelder-Mead  Nelder-Mead  \n",
       "6   144.357366  183.796319     NaN     NaN  Nelder-Mead  Nelder-Mead  \n",
       "7   141.960754  187.330059     NaN     NaN  Nelder-Mead  Nelder-Mead  \n",
       "8   140.698855  189.275802     NaN     NaN  Nelder-Mead  Nelder-Mead  \n",
       "9   136.361782  196.472716     NaN     NaN  Nelder-Mead  Nelder-Mead  \n",
       "10  130.457577  207.827070     NaN     NaN  Nelder-Mead  Nelder-Mead  \n",
       "11  125.804436  218.441868     NaN     NaN  Nelder-Mead  Nelder-Mead  \n",
       "12  117.769597  241.793290     NaN     NaN  Nelder-Mead  Nelder-Mead  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_eonr.df_ci"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- - - \n",
    "### Adjusting the economic scenario\n",
    "These results were calculated for a specific economic scenario, but the cost of fertilizer and price of grain can be adjusted to run `EONR` for another economic scenario. Just adjust the economic scenario by passing any of:\n",
    "\n",
    "* `cost_n_fert`\n",
    "* `price_grain`\n",
    "* `cost_n_social`\n",
    "\n",
    "to `EONR.update_econ()`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "cost_n_fert = 1.32  # adjusted from $0.88 per kg nitrogen\n",
    "my_eonr.update_econ(cost_n_fert=cost_n_fert)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- - -\n",
    "### Environmental observations\n",
    "You'll notice above that we can pass the `cost_n_social` variable to `EONR.update_econ()`. This is becuase `EONR` will calculate the  **Socially Optimum Nitrogen Rate (SONR)** if certain environmental data are available. For more information about the **SONR**, refer to the [Background chapter](background.html#The-social-cost-of-nitrogen).\n",
    "\n",
    "In the same way that `cost_n_fert` was adjusted in the previous code, `cost_n_social` will be set (for the first time):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "cost_n_social = 1.10 # in USD per kg nitrogen\n",
    "my_eonr.update_econ(cost_n_social=cost_n_social)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- - -\n",
    "### Calculate mineralization\n",
    "You may have noticed that [the loaded data](tutorial.html#Load-the-data) for this tutorial contains columns for nitrogen uptake (\"nup_total_kgha\") and available nitrogen (\"soil_plus_fert_n_kgha\"). This data can be used to calculate the approximate net mineralization for the zero rate, which can be assumed to consistent across all rates. Total crop available nitrogen can then be assumed to be the sum of fertilizer, soil, and net mineralized nitrogen. We can then calculate the **SONR** as long as the column names are correctly set. \n",
    "\n",
    "The column names were set for nitrogen fertilizer rate (`col_n_app`) and grain yield (`col_yld`) during the initialization of `EONR`, but they haven't been set for the nitrogen uptake or available nitrogen columns. This can be done (even after initilization of `EONR`) using `EONR.set_column_names()`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "def calc_mineralization(df_data, units_fert='kgha'):\n",
    "    '''\n",
    "    Calculates mineralization and adds \"crop_available_n\" to df\n",
    "    '''\n",
    "    df_trt0 = df_data[df_data['rate_n_applied_kgha']==0].copy()\n",
    "    df_trt0['mineralize_n'] = (df_trt0['nup_total_kgha'] -\n",
    "                               df_trt0['soil_plus_fert_n_kgha'])\n",
    "    trt0_mineralize = df_trt0['mineralize_n'].mean()\n",
    "    crop_n_label = 'crop_n_available_' + units_fert\n",
    "    df_data[crop_n_label] = df_data['soil_plus_fert_n_kgha'] + trt0_mineralize\n",
    "    return df_data\n",
    "\n",
    "df_data = calc_mineralization(df_data)\n",
    "\n",
    "col_crop_nup = 'nup_total_kgha'\n",
    "col_n_avail = 'crop_n_available_kgha'\n",
    "\n",
    "my_eonr.set_column_names(col_crop_nup=col_crop_nup,\n",
    "                         col_n_avail=col_n_avail)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`EONR` simply subtracts *end of season total nitrogen uptake* from *available nitrogen* to get **net crop nitrogen use**, which is subsequently used to calculate the **SONR**.\n",
    "\n",
    "- - -\n",
    "### Run `EONR` for the socially optimum rate\n",
    "Then simply run `EONR.calculate_eonr()` again to calculate the **SONR** for the updated economic scenario:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Computing SONR for Minnesota 2012 Pre\n",
      "Cost of N fertilizer: $1.32 per kg\n",
      "Price grain: $0.16 per kg\n",
      "Fixed costs: $0.00 per ha\n",
      "Social cost of N: $1.10 per kg\n",
      "Checking quadratic and quadric-plateau models for best fit..\n",
      "Quadratic model r^2: 0.72\n",
      "Quadratic-plateau model r^2: 0.73\n",
      "Using the quadratic-plateau model..\n",
      "Socially optimum N rate (SONR): 149.6 kg per ha [122.4, 186.3] (90.0% confidence)\n",
      "Maximum return to N (MRTN): $684.60 per ha\n"
     ]
    }
   ],
   "source": [
    "my_eonr.calculate_eonr(df_data)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The new results are appended to the `EONR.df_results` dataframe:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price_grain</th>\n",
       "      <th>cost_n_fert</th>\n",
       "      <th>cost_n_social</th>\n",
       "      <th>costs_fixed</th>\n",
       "      <th>price_ratio</th>\n",
       "      <th>unit_price_grain</th>\n",
       "      <th>unit_cost_n</th>\n",
       "      <th>location</th>\n",
       "      <th>year</th>\n",
       "      <th>time_n</th>\n",
       "      <th>...</th>\n",
       "      <th>mrtn</th>\n",
       "      <th>grtn_r2_adj</th>\n",
       "      <th>grtn_rmse</th>\n",
       "      <th>grtn_max_y</th>\n",
       "      <th>grtn_crit_x</th>\n",
       "      <th>grtn_y_int</th>\n",
       "      <th>scn_lin_r2</th>\n",
       "      <th>scn_lin_rmse</th>\n",
       "      <th>scn_exp_r2</th>\n",
       "      <th>scn_exp_rmse</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.157</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>5.605096</td>\n",
       "      <td>$ per ha</td>\n",
       "      <td>$ per kg</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>...</td>\n",
       "      <td>767.930477</td>\n",
       "      <td>0.728926</td>\n",
       "      <td>181.225993</td>\n",
       "      <td>917.43358</td>\n",
       "      <td>177.439985</td>\n",
       "      <td>0.002964</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.157</td>\n",
       "      <td>1.32</td>\n",
       "      <td>1.1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>15.414013</td>\n",
       "      <td>$ per ha</td>\n",
       "      <td>$ per kg</td>\n",
       "      <td>Minnesota</td>\n",
       "      <td>2012</td>\n",
       "      <td>Pre</td>\n",
       "      <td>...</td>\n",
       "      <td>684.596933</td>\n",
       "      <td>0.728926</td>\n",
       "      <td>181.225993</td>\n",
       "      <td>917.43358</td>\n",
       "      <td>177.439985</td>\n",
       "      <td>0.002964</td>\n",
       "      <td>0.777106</td>\n",
       "      <td>139.314</td>\n",
       "      <td>0.836099</td>\n",
       "      <td>21.1184</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows × 33 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   price_grain  cost_n_fert  cost_n_social  costs_fixed  price_ratio  \\\n",
       "0        0.157         0.88            0.0          0.0     5.605096   \n",
       "1        0.157         1.32            1.1          0.0    15.414013   \n",
       "\n",
       "  unit_price_grain unit_cost_n   location  year time_n  ...        mrtn  \\\n",
       "0         $ per ha    $ per kg  Minnesota  2012    Pre  ...  767.930477   \n",
       "1         $ per ha    $ per kg  Minnesota  2012    Pre  ...  684.596933   \n",
       "\n",
       "   grtn_r2_adj   grtn_rmse  grtn_max_y  grtn_crit_x  grtn_y_int  scn_lin_r2  \\\n",
       "0     0.728926  181.225993   917.43358   177.439985    0.002964        None   \n",
       "1     0.728926  181.225993   917.43358   177.439985    0.002964    0.777106   \n",
       "\n",
       "   scn_lin_rmse  scn_exp_r2  scn_exp_rmse  \n",
       "0          None        None          None  \n",
       "1       139.314    0.836099       21.1184  \n",
       "\n",
       "[2 rows x 33 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_eonr.df_results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "`EONR.plot_eonr()` and `EONR.plot_tau()` can be called again to plot the new results:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x288 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x288 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "my_eonr.plot_eonr(x_min=-5, x_max=300, y_min=-200, y_max=1400)\n",
    "my_eonr.plot_tau()\n",
    "fig_tau = my_eonr.plot_modify_size(fig=my_eonr.fig_tau.fig, plotsize_x=5, plotsize_y=4.0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Notice the added data in the nitrogen response plot:\n",
    "\n",
    "* The gold points represent **net crop nitrogen use** (expressed as a \\\\$ amount based on the value set for `cost_n_social`)\n",
    "* The gold line is the best-fit exponential model representing **net crop nitrogen use** (`EONR` fits both a linear and exponential model for this, then uses whichever has a higher $\\text{r}^2$)\n",
    "\n",
    "- - -\n",
    "### Saving the data\n",
    "The results generated by `EONR` can be saved to the `EONR.base_dir` using the `Pandas` `df.to_csv()` function. A folder will be created in the base_dir whose name is determined by the **current economic scenario** of `my_eonr` (in this case \"social_154_1100\", corresponding to `cost_n_social > 0`, `price_ratio = 15.4`, and `cost_n_social = 1.10` for \"social\", \"154\", and \"1100\" in the folder name, respectively):"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "F:\\nigo0024\\Documents\\GitHub\\eonr\\docs\\source\\eonr_tutorial\\social_154_1100\n"
     ]
    }
   ],
   "source": [
    "print(my_eonr.base_dir)\n",
    "\n",
    "my_eonr.df_results.to_csv(os.path.join(os.path.split(my_eonr.base_dir)[0], 'tutorial_results.csv'), index=False)\n",
    "my_eonr.df_ci.to_csv(os.path.join(os.path.split(my_eonr.base_dir)[0], 'tutorial_ci.csv'), index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Upon generating figures using `EONR.plot_eonr()` or `EONR.plot_tau()`, the `matplotlib` figures are stored to the `EONR` class. They can be saved to file by using `EONR.plot_save()`: "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "fname_eonr_plot = 'eonr_mn2012_pre.png'\n",
    "fname_tau_plot = 'tau_mn2012_pre.png'\n",
    "\n",
    "my_eonr.plot_save(fname=fname_eonr_plot, fig=my_eonr.fig_eonr)\n",
    "my_eonr.plot_save(fname=fname_tau_plot, fig=my_eonr.fig_tau)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
